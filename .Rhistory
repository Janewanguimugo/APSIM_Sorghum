date = c("2001-01-01","2022-01-01")
## This will not write a file to disk
my_list_clm <- foreach (i = 1:nrow(stn)) %dopar% {
apsimx::get_power_apsim_met(lonlat = c(stn$Longitude[[i]], stn$Latitude[[i]]),
dates = date)
}
#Get soil data from iscric
my_list_sol <- foreach (i = 1:nrow(stn)) %dopar% {
tryCatch(apsimx::get_isric_soil_profile(lonlat = c(stn$Longitude[i], stn$Latitude[[i]]),add.args = list(crops = c("Maize", "Sorghum")))
, error=function(err) NA)
# Return both lists in a named list
data <- list(my_list_clm = my_list_clm, my_list_sol = my_list_sol, stn = stn)
return(data)
}
#Get soil data from iscric
my_list_sol <- foreach (i = 1:nrow(stn)) %dopar% {
tryCatch(apsimx::get_isric_soil_profile(lonlat = c(stn$Longitude[i], stn$Latitude[[i]]),add.args = list(crops = c("Maize", "Sorghum")))
, error=function(err) NA)
}
# Return both lists in a named list
data <- list(my_list_clm = my_list_clm, my_list_sol = my_list_sol, stn = stn)
View(data)
apsim.data <- function(cell, b, date) {
#GET COUNTRY SHAPEFILE
country<-raster::getData("GADM", country= b, level=0)
country <- st_as_sf(country)
# Make a grid of points
points <- country %>%
st_make_grid(cellsize = cell, what = "centers") %>% # grid of points
st_intersection(country)
#View the number of points sampled and convert them to a dataframe
print(ggplot() +
geom_sf(data = country) +
geom_sf(data = points))
df<-as.data.frame(st_coordinates(st_centroid(points)))
colnames(df) <- c('Longitude','Latitude')
stn<-df
#text(stn$Longitude, y = stn$Latitude, pos = 3)
#Get Meteorological data from nasapower
require(nasapower)
## This will not write a file to disk
my_list_clm <- foreach (i = 1:nrow(stn)) %dopar% {
apsimx::get_power_apsim_met(lonlat = c(stn$Longitude[[i]], stn$Latitude[[i]]),
dates = date)
}
#Get soil data from iscric
my_list_sol <- foreach (i = 1:nrow(stn)) %dopar% {
tryCatch(apsimx::get_isric_soil_profile(lonlat = c(stn$Longitude[i], stn$Latitude[[i]]),add.args = list(crops = c("Maize", "Sorghum")))
, error=function(err) NA)
}
# Return both lists in a named list
data <- list(my_list_clm = my_list_clm, my_list_sol = my_list_sol, stn = stn)
return(data)
}
data<- apsim.data(cell = 3,
b= "Zimbabwe",
date = c("2001-01-01","2022-01-01")
)
# Access the lists
my_list_clm <- data$my_list_clm
my_list_sol <- data$my_list_sol
stn<- data$stn
######################Source data only once###############################
apsim.data <- function(cell, b, date) {
#GET COUNTRY SHAPEFILE
country<-raster::getData("GADM", country= b, level=0)
country <- st_as_sf(country)
# Make a grid of points
points <- country %>%
st_make_grid(cellsize = cell, what = "centers") %>% # grid of points
st_intersection(country)
#View the number of points sampled and convert them to a dataframe
print(ggplot() +
geom_sf(data = country) +
geom_sf(data = points))
df<-as.data.frame(st_coordinates(st_centroid(points)))
colnames(df) <- c('Longitude','Latitude')
stn<-df
#text(stn$Longitude, y = stn$Latitude, pos = 3)
#Get Meteorological data from nasapower
require(nasapower)
## This will not write a file to disk
my_list_clm <- foreach (i = 1:nrow(stn)) %dopar% {
apsimx::get_power_apsim_met(lonlat = c(stn$Longitude[[i]], stn$Latitude[[i]]),
dates = date)
}
#Get soil data from iscric
my_list_sol <- foreach (i = 1:nrow(stn)) %dopar% {
tryCatch(apsimx::get_isric_soil_profile(lonlat = c(stn$Longitude[i], stn$Latitude[[i]]),add.args = list(crops = c("Maize", "Sorghum")))
, error=function(err) NA)
}
# Return both lists in a named list
data <- list(my_list_clm = my_list_clm, my_list_sol = my_list_sol, stn = stn)
return(data)
}
###################SECOND FUNCTION#################################################################
apsim.spatial <- function(wkdir, exdir, cell, b, date, crop, clck) {
my_packages <- c("spdep", "rgdal", "maptools", "raster", "plyr", "ggplot2", "rgdal",
"dplyr", "cowplot","readxl", "apsimx", "gtools", "foreach","doParallel",
"ranger")
list.of.packages <- my_packages
new.packages <- list.of.packages[!(my_packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(my_packages, require, character.only = TRUE)
cores<- detectCores()
myCluster <- makeCluster(cores -2, # number of cores to use
type = "PSOCK") # type of cluster
registerDoParallel(myCluster)
#Change depending on where you crop.apsimx file is stored, this script used the examples#
setwd(wkdir)
ex.dir <- exdir
#ex.dir <- system.file("extdata", package = "apsimx")
extd.dir <-wkdir
file.copy(paste0(ex.dir, "/", crop),  extd.dir, overwrite = TRUE)
#list.files(ex.dir)
list.files(ex.dir)
##APSIM PART##
#Write the weather files to a working directory and Edit the weather as per location
foreach (i =1:length(my_list_clm)) %dopar% {
apsimx::write_apsim_met(my_list_clm[[i]], wrt.dir = extd.dir, filename = paste0('wth_loc_',i,'.met'))}
foreach (i =1:length(my_list_clm)) %dopar% {
dir.create(paste0(extd.dir, '/', i))
apsimx::edit_apsimx(paste0(crop),
src.dir = extd.dir,
wrt.dir = paste0(extd.dir, '/', i),
root = c("pd", "Base_one"),
node = "Weather",
value = paste0(extd.dir, "/", 'wth_loc_',i,'.met'),
overwrite = TRUE)
}
foreach (i =1:length(my_list_sol)) %do% {
setwd(paste0(extd.dir, '/', i))
# tryCatch({my_list_sol[[i]]$soil$BD <-  my_list_sol[[i]]$soil$BD * 0.86}, error=function(e) {NA})
# tryCatch({my_list_sol[[i]]$soil$crop.LL <-  my_list_sol[[i]]$soil$LL15 + 0.01}, error=function(e) {NA})
# tryCatch({my_list_sol[[i]]$soil$SAT <-c(0.521, 0.521, 0.497, 0.488, 0.478, 0.440)}, error=function(e) {NA})
# tryCatch({my_list_sol[[i]]$soil$AirDry <- my_list_sol[[i]]$soil$LL15 - 0.02}, error=function(e) {NA})
# #edit_apsimx_replace_soil_profile(crop, soil.profile = my_list_sol[[i]], overwrite = TRUE)
tryCatch({edit_apsimx_replace_soil_profile(crop, root = c("pd", "Base_one"), soil.profile = my_list_sol[[i]], overwrite = TRUE)},
error=function(e) {NA})
}
#Edit clock#
foreach (i =1:length(my_list_clm)) %dopar% {
setwd(paste0(extd.dir, '/', i))
apsimx::edit_apsimx(crop,
root = c("pd", "Base_one"),
node = "Clock",
parm = c("Start", "End"),
value = clck,
overwrite = TRUE)
}
# Run the simulation for the entire study area
my_list_sim<- foreach (i =1:length(my_list_sol)) %dopar% {
setwd(paste0(extd.dir, '/', i))
tryCatch(apsimx::apsimx(crop, value = "HarvestReport"), error=function(err) NA)
#apsim.spatial("D:/project", 3, "KE", c("2020-01-01","2022-01-01"), "soybean.apsimx", c("2010-11-01T00:00:00", "2020-12-31T00:00:00"),"1-nov", "30-nov", "Davis")
}
return(my_list_sim)
}
###################SECOND FUNCTION#################################################################
apsim.spatial <- function(wkdir, exdir, crop, clck) {
my_packages <- c("spdep", "rgdal", "maptools", "raster", "plyr", "ggplot2", "rgdal",
"dplyr", "cowplot","readxl", "apsimx", "gtools", "foreach","doParallel",
"ranger")
list.of.packages <- my_packages
new.packages <- list.of.packages[!(my_packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(my_packages, require, character.only = TRUE)
cores<- detectCores()
myCluster <- makeCluster(cores -2, # number of cores to use
type = "PSOCK") # type of cluster
registerDoParallel(myCluster)
#Change depending on where you crop.apsimx file is stored, this script used the examples#
setwd(wkdir)
ex.dir <- exdir
#ex.dir <- system.file("extdata", package = "apsimx")
extd.dir <-wkdir
file.copy(paste0(ex.dir, "/", crop),  extd.dir, overwrite = TRUE)
#list.files(ex.dir)
list.files(ex.dir)
##APSIM PART##
#Write the weather files to a working directory and Edit the weather as per location
foreach (i =1:length(my_list_clm)) %dopar% {
apsimx::write_apsim_met(my_list_clm[[i]], wrt.dir = extd.dir, filename = paste0('wth_loc_',i,'.met'))}
foreach (i =1:length(my_list_clm)) %dopar% {
dir.create(paste0(extd.dir, '/', i))
apsimx::edit_apsimx(paste0(crop),
src.dir = extd.dir,
wrt.dir = paste0(extd.dir, '/', i),
root = c("pd", "Base_one"),
node = "Weather",
value = paste0(extd.dir, "/", 'wth_loc_',i,'.met'),
overwrite = TRUE)
}
foreach (i =1:length(my_list_sol)) %do% {
setwd(paste0(extd.dir, '/', i))
# tryCatch({my_list_sol[[i]]$soil$BD <-  my_list_sol[[i]]$soil$BD * 0.86}, error=function(e) {NA})
# tryCatch({my_list_sol[[i]]$soil$crop.LL <-  my_list_sol[[i]]$soil$LL15 + 0.01}, error=function(e) {NA})
# tryCatch({my_list_sol[[i]]$soil$SAT <-c(0.521, 0.521, 0.497, 0.488, 0.478, 0.440)}, error=function(e) {NA})
# tryCatch({my_list_sol[[i]]$soil$AirDry <- my_list_sol[[i]]$soil$LL15 - 0.02}, error=function(e) {NA})
# #edit_apsimx_replace_soil_profile(crop, soil.profile = my_list_sol[[i]], overwrite = TRUE)
tryCatch({edit_apsimx_replace_soil_profile(crop, root = c("pd", "Base_one"), soil.profile = my_list_sol[[i]], overwrite = TRUE)},
error=function(e) {NA})
}
#Edit clock#
foreach (i =1:length(my_list_clm)) %dopar% {
setwd(paste0(extd.dir, '/', i))
apsimx::edit_apsimx(crop,
root = c("pd", "Base_one"),
node = "Clock",
parm = c("Start", "End"),
value = clck,
overwrite = TRUE)
}
# Run the simulation for the entire study area
my_list_sim<- foreach (i =1:length(my_list_sol)) %dopar% {
setwd(paste0(extd.dir, '/', i))
tryCatch(apsimx::apsimx(crop, value = "HarvestReport"), error=function(err) NA)
#apsim.spatial("D:/project", 3, "KE", c("2020-01-01","2022-01-01"), "soybean.apsimx", c("2010-11-01T00:00:00", "2020-12-31T00:00:00"),"1-nov", "30-nov", "Davis")
}
return(my_list_sim)
}
##APSIM PART##
#Write the weather files to a working directory and Edit the weather as per location
foreach (i =1:length(my_list_clm)) %dopar% {
apsimx::write_apsim_met(my_list_clm[[i]], wrt.dir = extd.dir, filename = paste0('wth_loc_',i,'.met'))}
###################SECOND FUNCTION#################################################################
apsim.spatial <- function(wkdir, exdir, crop, clck) {
my_packages <- c("spdep", "rgdal", "maptools", "raster", "plyr", "ggplot2", "rgdal",
"dplyr", "cowplot","readxl", "apsimx", "gtools", "foreach","doParallel",
"ranger")
list.of.packages <- my_packages
new.packages <- list.of.packages[!(my_packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(my_packages, require, character.only = TRUE)
cores<- detectCores()
myCluster <- makeCluster(cores -2, # number of cores to use
type = "PSOCK") # type of cluster
registerDoParallel(myCluster)
#Change depending on where you crop.apsimx file is stored, this script used the examples#
setwd(wkdir)
ex.dir <- exdir
#ex.dir <- system.file("extdata", package = "apsimx")
extd.dir <-wkdir
file.copy(paste0(ex.dir, "/", crop),  extd.dir, overwrite = TRUE)
#list.files(ex.dir)
list.files(ex.dir)
##APSIM PART##
#Write the weather files to a working directory and Edit the weather as per location
foreach (i =1:length(my_list_clm)) %dopar% {
apsimx::write_apsim_met(my_list_clm[[i]], wrt.dir = extd.dir, filename = paste0('wth_loc_',i,'.met'))}
foreach (i =1:length(my_list_clm)) %dopar% {
dir.create(paste0(extd.dir, '/', i))
apsimx::edit_apsimx(paste0(crop),
src.dir = extd.dir,
wrt.dir = paste0(extd.dir, '/', i),
root = c("pd", "Base_one"),
node = "Weather",
value = paste0(extd.dir, "/", 'wth_loc_',i,'.met'),
overwrite = TRUE)
}
foreach (i =1:length(my_list_sol)) %do% {
setwd(paste0(extd.dir, '/', i))
# tryCatch({my_list_sol[[i]]$soil$BD <-  my_list_sol[[i]]$soil$BD * 0.86}, error=function(e) {NA})
# tryCatch({my_list_sol[[i]]$soil$crop.LL <-  my_list_sol[[i]]$soil$LL15 + 0.01}, error=function(e) {NA})
# tryCatch({my_list_sol[[i]]$soil$SAT <-c(0.521, 0.521, 0.497, 0.488, 0.478, 0.440)}, error=function(e) {NA})
# tryCatch({my_list_sol[[i]]$soil$AirDry <- my_list_sol[[i]]$soil$LL15 - 0.02}, error=function(e) {NA})
# #edit_apsimx_replace_soil_profile(crop, soil.profile = my_list_sol[[i]], overwrite = TRUE)
tryCatch({edit_apsimx_replace_soil_profile(crop, root = c("pd", "Base_one"), soil.profile = my_list_sol[[i]], overwrite = TRUE)},
error=function(e) {NA})
}
#Edit clock#
foreach (i =1:length(my_list_clm)) %dopar% {
setwd(paste0(extd.dir, '/', i))
apsimx::edit_apsimx(crop,
root = c("pd", "Base_one"),
node = "Clock",
parm = c("Start", "End"),
value = clck,
overwrite = TRUE)
}
# Run the simulation for the entire study area
my_list_sim<- foreach (i =1:length(my_list_sol)) %dopar% {
setwd(paste0(extd.dir, '/', i))
tryCatch(apsimx::apsimx(crop, value = "HarvestReport"), error=function(err) NA)
#apsim.spatial("D:/project", 3, "KE", c("2020-01-01","2022-01-01"), "soybean.apsimx", c("2010-11-01T00:00:00", "2020-12-31T00:00:00"),"1-nov", "30-nov", "Davis")
}
return(my_list_sim)
}
results<- apsim.spatial(wkdir ="D:/Zimbabwe/project",
exdir = "D:/Zimbabwe/",
date = c("2001-01-01","2022-01-01"),
crop = "Sorghum_2090.apsimx",
clck = c("2001-01-01T00:00:00", "2021-12-01T00:00:00")
)
results<- apsim.spatial(wkdir ="D:/Zimbabwe/project",
exdir = "D:/Zimbabwe/",
crop = "Sorghum_2090.apsimx",
clck = c("2001-01-01T00:00:00", "2021-12-01T00:00:00")
)
###################SECOND FUNCTION#################################################################
apsim.spatial <- function(wkdir, exdir, my_list_clm, my_list_sol, crop, clck) {
my_packages <- c("spdep", "rgdal", "maptools", "raster", "plyr", "ggplot2", "rgdal",
"dplyr", "cowplot","readxl", "apsimx", "gtools", "foreach","doParallel",
"ranger")
list.of.packages <- my_packages
new.packages <- list.of.packages[!(my_packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(my_packages, require, character.only = TRUE)
cores<- detectCores()
myCluster <- makeCluster(cores -2, # number of cores to use
type = "PSOCK") # type of cluster
registerDoParallel(myCluster)
#Change depending on where you crop.apsimx file is stored, this script used the examples#
setwd(wkdir)
ex.dir <- exdir
#ex.dir <- system.file("extdata", package = "apsimx")
extd.dir <-wkdir
file.copy(paste0(ex.dir, "/", crop),  extd.dir, overwrite = TRUE)
#list.files(ex.dir)
list.files(ex.dir)
##APSIM PART##
#Write the weather files to a working directory and Edit the weather as per location
foreach (i =1:length(my_list_clm)) %dopar% {
apsimx::write_apsim_met(my_list_clm[[i]], wrt.dir = extd.dir, filename = paste0('wth_loc_',i,'.met'))}
foreach (i =1:length(my_list_clm)) %dopar% {
dir.create(paste0(extd.dir, '/', i))
apsimx::edit_apsimx(paste0(crop),
src.dir = extd.dir,
wrt.dir = paste0(extd.dir, '/', i),
root = c("pd", "Base_one"),
node = "Weather",
value = paste0(extd.dir, "/", 'wth_loc_',i,'.met'),
overwrite = TRUE)
}
foreach (i =1:length(my_list_sol)) %do% {
setwd(paste0(extd.dir, '/', i))
# tryCatch({my_list_sol[[i]]$soil$BD <-  my_list_sol[[i]]$soil$BD * 0.86}, error=function(e) {NA})
# tryCatch({my_list_sol[[i]]$soil$crop.LL <-  my_list_sol[[i]]$soil$LL15 + 0.01}, error=function(e) {NA})
# tryCatch({my_list_sol[[i]]$soil$SAT <-c(0.521, 0.521, 0.497, 0.488, 0.478, 0.440)}, error=function(e) {NA})
# tryCatch({my_list_sol[[i]]$soil$AirDry <- my_list_sol[[i]]$soil$LL15 - 0.02}, error=function(e) {NA})
# #edit_apsimx_replace_soil_profile(crop, soil.profile = my_list_sol[[i]], overwrite = TRUE)
tryCatch({edit_apsimx_replace_soil_profile(crop, root = c("pd", "Base_one"), soil.profile = my_list_sol[[i]], overwrite = TRUE)},
error=function(e) {NA})
}
#Edit clock#
foreach (i =1:length(my_list_clm)) %dopar% {
setwd(paste0(extd.dir, '/', i))
apsimx::edit_apsimx(crop,
root = c("pd", "Base_one"),
node = "Clock",
parm = c("Start", "End"),
value = clck,
overwrite = TRUE)
}
# Run the simulation for the entire study area
my_list_sim<- foreach (i =1:length(my_list_sol)) %dopar% {
setwd(paste0(extd.dir, '/', i))
tryCatch(apsimx::apsimx(crop, value = "HarvestReport"), error=function(err) NA)
#apsim.spatial("D:/project", 3, "KE", c("2020-01-01","2022-01-01"), "soybean.apsimx", c("2010-11-01T00:00:00", "2020-12-31T00:00:00"),"1-nov", "30-nov", "Davis")
}
return(my_list_sim)
}
results<- apsim.spatial(wkdir ="D:/Zimbabwe/project",
exdir = "D:/Zimbabwe/",
crop = "Sorghum_2090.apsimx",
clck = c("2001-01-01T00:00:00", "2021-12-01T00:00:00")
)
results<- apsim.spatial(wkdir ="D:/Zimbabwe/project",
exdir = "D:/Zimbabwe/",
crop = "Sorghum_2090.apsimx",
clck = c("2001-01-01T00:00:00", "2021-12-01T00:00:00"),
my_list_clm = my_list_clm,
my_list_sol = my_list_sol
)
View(results)
apsim.plots<- function(results, b, wkdir){
setwd(wkdir)
stn<- read.csv("station.csv")
foreach (i = 1:length(results))%do%{
results[[i]]$Longitude<-stn$Longitude[[i]]
results[[i]]$Latitude<-stn$Latitude[[i]]
}
for (i in 1:10){
foreach (i = 1:length(results))%do%{
if(lengths(results[i])< 5){
results[[i]] <- NULL
}
}
}
##############################Graphs######################################
foreach (i = 1:length(results))%do%{
# Define the custom order for SowDate
custom_order <- c("01-Nov", "15-Nov", "01-Dec", "15-Dec", "01-Jan", "15-jan", "01-Feb", "15-Feb")
# Convert SowDate to a factor with the custom order
results[[i]]$SowDate <- factor(results[[i]]$SowDate, levels = custom_order)
# Order the data frame by SowDate
results[[i]] <- results[[i]] %>%
arrange(SowDate)
print(results[[i]]  %>%
ggplot(aes(x=SowDate, y=FinalYield_kg_Ha, color= Ideotype)) +
geom_point(na.rm=TRUE)+
ggtitle(paste0("Yield ",i)))
}
###########################################################################
final<- do.call("smartbind", results)
glimpse(final)
final<-final%>%
group_by(Longitude, Latitude, Ideotype)%>%
slice(which.max(FinalYield_kg_Ha))%>%
as.data.frame()
country<-getData("GADM", country=b, level=0)
print(ggplot()+geom_polygon(data=country, aes(x=long, y=lat), fill = "white")+
geom_point(data=final, aes(x=Longitude, y=Latitude, color= SowDate), size = 4)+
facet_wrap(~ Ideotype))
print(ggplot()+geom_polygon(data=country, aes(x=long, y=lat), fill = "white")+
geom_point(data=final, aes(x=Longitude, y=Latitude, color= FinalYield_kg_Ha), size = 4)+
facet_wrap(~ Ideotype))
print(ggplot() +  geom_point(data=final, aes(x=Longitude, y=Latitude, color= SowDate), size = 4)+
facet_wrap(~ Ideotype))
print(ggplot() +  geom_point(data=final, aes(x=Longitude, y=Latitude, color= FinalYield_kg_Ha), size = 4)+
facet_wrap(~ Ideotype))
}
apsim.plots(results,"Zimbabwe", "D:/Zimbabwe/project")
setwd("D:/Zimbabwe")
#01 Start by Sourcing the soil and Climate Data
source("SourceData_01.R")
getwd()
#01 Start by Sourcing the soil and Climate Data run only once
#b = the country shapefile e.g "ZM" for Zimbabwe
source("D:/Zimbabwe/Scripts/SourceData_01.R")
data<- apsim.data(cell = 3,
b= "Zimbabwe",
date = c("2001-01-01","2022-01-01")
)
# Access the lists
my_list_clm <- data$my_list_clm
my_list_sol <- data$my_list_sol
stn<- data$stn
write.csv(stn, "station.csv", row.names=FALSE )
#02 use the second function to edit your APSIMx files with unique weather and soil
source("D:/Zimbabwe/RunSimulation_02.R")
#02 use the second function to edit your APSIMx files with unique weather and soil
source("D:/Zimbabwe/Scripts/RunSimulation_02.R")
results<- apsim.spatial(wkdir ="D:/Zimbabwe/project",
exdir = "D:/Zimbabwe/",
crop = "Sorghum_2090.apsimx",
clck = c("2001-01-01T00:00:00", "2021-12-01T00:00:00"),
my_list_clm = my_list_clm,
my_list_sol = my_list_sol
)
#02 use the second function to edit your APSIMx files with unique weather and soil
#It Will take time to run
source("D:/Zimbabwe/Scripts/RunSimulation_02.R")
results<- apsim.spatial(wkdir ="D:/Zimbabwe/project",
exdir = "D:/Zimbabwe/",
crop = "Sorghum_2090.apsimx",
clck = c("2001-01-01T00:00:00", "2021-12-01T00:00:00"),
my_list_clm = my_list_clm,
my_list_sol = my_list_sol
)
#03 Plot the Outputs for the highest mean yield variety
##THIRD FUNCTION ON PLOTTING USING THE RESULTS OBTAINED FROM apsim.spatial COMMAND##
#results = the results list obtained from apsim.spatial command
#wkdir = the directory where station data is saved
Source("D:/Zimbabwe/Scripts/PlotOutputs_03.R")
#03 Plot the Outputs for the highest mean yield variety
##THIRD FUNCTION ON PLOTTING USING THE RESULTS OBTAINED FROM apsim.spatial COMMAND##
#results = the results list obtained from apsim.spatial command
#wkdir = the directory where station data is saved
source("D:/Zimbabwe/Scripts/PlotOutputs_03.R")
apsim.plots(results,"Zimbabwe", "D:/Zimbabwe/project")
#01 Start by Sourcing the soil and Climate Data run only once
#b = the country shapefile e.g "ZM" for Zimbabwe
source("D:/Zimbabwe/Scripts/SourceData_01.R")
data<- apsim.data(cell = 3,
b= "Zimbabwe",
date = c("2001-01-01","2022-01-01")
)
data <- readRDS("D:/Zimbabwe/my_data.rds")
load("D:/Zimbabwe/.RData")
load("D:/Zimbabwe/.RData")
data <- readRDS("D:/Zimbabwe/project/my_data.rds")
#01 Start by Sourcing the soil and Climate Data run only once
#b = the country shapefile e.g "ZM" for Zimbabwe
source("D:/Zimbabwe/Scripts/SourceData_01.R")
apsim.data(cell = 3,
b= "Zimbabwe",
date = c("2001-01-01","2022-01-01")
)
##NEXT RUN START FROM HERE NO NEED TO REDOWNLOAD THE DATA
data <- readRDS("D:/Zimbabwe/project/my_data.rds")
# Access the lists
my_list_clm <- data$my_list_clm
my_list_sol <- data$my_list_sol
stn<- data$stn
write.csv(stn, "station.csv", row.names=FALSE )
#02 use the second function to edit your APSIMx files with unique weather and soil
#It Will take time to run
source("D:/Zimbabwe/Scripts/RunSimulation_02.R")
results<- apsim.spatial(wkdir ="D:/Zimbabwe/project",
exdir = "D:/Zimbabwe/",
crop = "Sorghum_2090.apsimx",
clck = c("2001-01-01T00:00:00", "2021-12-01T00:00:00"),
my_list_clm = my_list_clm,
my_list_sol = my_list_sol
)
#03 Plot the Outputs for the highest mean yield variety
##THIRD FUNCTION ON PLOTTING USING THE RESULTS OBTAINED FROM apsim.spatial COMMAND##
#results = the results list obtained from apsim.spatial command
#wkdir = the directory where station data is saved
source("D:/Zimbabwe/Scripts/PlotOutputs_03.R")
apsim.plots(results,"Zimbabwe", "D:/Zimbabwe/project")
